cmake_minimum_required(VERSION 2.4.6)
include($ENV{ROS_ROOT}/core/rosbuild/rosbuild.cmake)

# Set the build type.  Options are:
#  Coverage       : w/ debug symbols, w/o optimization, w/ code-coverage
#  Debug          : w/ debug symbols, w/o optimization
#  Release        : w/o debug symbols, w/ optimization
#  RelWithDebInfo : w/ debug symbols, w/ optimization
#  MinSizeRel     : w/o debug symbols, w/ optimization, stripped binaries
set(ROS_BUILD_TYPE Debug)

rosbuild_init()

message(STATUS "Parth: "${PROJECT_SOURCE_DIR})
#set the default path for built executables to the "bin" directory
set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)
#set the default path for built libraries to the "lib" directory
#set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib)
set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/src/lib)

#INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/include/irobot_stargazer)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/src/include)

set(TRIANGLE_LIB ${PROJECT_SOURCE_DIR}/src/lib/libtriangle.a)
set(BDD_LIB ${PROJECT_SOURCE_DIR}/src/lib/libbdd.a)
set(MEM_LIB ${PROJECT_SOURCE_DIR}/src/lib/libmem.a)
set(LTLBA_LIB ${PROJECT_SOURCE_DIR}/src/lib/libltlba.a)
#uncomment if you have defined messages
#rosbuild_genmsg()
#uncomment if you have defined services
#rosbuild_gensrv()

#common commands for building c++ executables and libraries
#rosbuild_add_library(${PROJECT_NAME} src/example.cpp)
#target_link_libraries(${PROJECT_NAME} another_library)
#rosbuild_add_boost_directories()
#rosbuild_link_boost(${PROJECT_NAME} thread)
#rosbuild_add_executable(example examples/example.cpp)
#target_link_libraries(example ${PROJECT_NAME})


add_custom_target(build_triangulation ALL
	COMMAND ${CMAKE_MAKE_PROGRAM}
	WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/src/triangulation
	COMMENT "CREATING TRIANGULATION LIB" )
add_library(triangulation STATIC IMPORTED)
set_property(TARGET triangulation APPEND PROPERTY IMPORTED_CONFIGURATIONS NOCONFIG)
set_target_properties(triangulation PROPERTIES IMPORTED_LOCATION_NOCONFIG "${TRIANGLE_LIB}")
add_dependencies(triangulation build_triangulation)

ADD_CUSTOM_TARGET(build_ltlba ALL
        COMMAND ${CMAKE_MAKE_PROGRAM}
	WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/src/ltl2ba-1.1
        COMMENT "CREATING LTL LIB" )
ADD_LIBRARY(ltlba STATIC IMPORTED)
set_property(TARGET ltlba APPEND PROPERTY IMPORTED_CONFIGURATIONS NOCONFIG)
set_target_properties(ltlba PROPERTIES IMPORTED_LOCATION_NOCONFIG "${LTLBA_LIB}")
ADD_DEPENDENCIES(ltlba build_ltlba)

ADD_CUSTOM_TARGET(build_memlib ALL
        COMMAND ${CMAKE_MAKE_PROGRAM}
        WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/src/mem
        COMMENT "CREATING MEM LIB" )
ADD_LIBRARY(memlib STATIC IMPORTED)
set_property(TARGET memlib APPEND PROPERTY IMPORTED_CONFIGURATIONS NOCONFIG)
set_target_properties(memlib PROPERTIES IMPORTED_LOCATION_NOCONFIG "${MEM_LIB}")
ADD_DEPENDENCIES(memlib build_memlib)

ADD_CUSTOM_TARGET(build_bddlib ALL
        COMMAND ${CMAKE_MAKE_PROGRAM}
        WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/src/bddlib
        COMMENT "CREATING BDD LIB" )
ADD_LIBRARY(bddlib STATIC IMPORTED)
set_property(TARGET bddlib APPEND PROPERTY IMPORTED_CONFIGURATIONS NOCONFIG)
set_target_properties(bddlib PROPERTIES IMPORTED_LOCATION_NOCONFIG "${BDD_LIB}")
ADD_DEPENDENCIES(bddlib build_bddlib)


rosbuild_add_executable(${PROJECT_NAME} src/lower_planner.cpp)
rosbuild_add_executable(${PROJECT_NAME} src/trial.c)
rosbuild_add_executable(${PROJECT_NAME} src/new_env.cpp)

target_link_libraries(${PROJECT_NAME} triangulation ltlba bddlib memlib)
#target_link_libraries(irobot_stargazer ltlba)
#target_link_libraries(irobot_stargazer memlib)
#target_link_libraries(irobot_stargazer bddlib)
